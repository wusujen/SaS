package com.christine.cart.sqlite;

import java.util.ArrayList;
import java.util.List;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;

public class AccountDatabaseHelper extends SQLiteOpenHelper{

	// All static variables
	private static final int DATABASE_VERSION = 1;
	private static final String DATABASE_NAME = "accounts_db";
	
	// Accounts table name
	private static final String TABLE_ACCOUNTS= "account_info";
	
	// Table account_info column names
	private static final String ACCOUNT_ID = "_id";
	private static final String ACCOUNT_NAME = "username";
	private static final String ACCOUNT_PASSWORD = "password";
	
	// Constructor
	public AccountDatabaseHelper(Context context) {
		super(context, DATABASE_NAME, null, DATABASE_VERSION);
	}
	
	// Create the account_info table
	@Override
	public void onCreate(SQLiteDatabase db) {
		String CREATE_ACCOUNT_INFO_TABLE = "CREATE TABLE " + TABLE_ACCOUNTS + "(" + ACCOUNT_ID + "INTEGER PRIMARY KEY," + ACCOUNT_NAME + " TEXT," + ACCOUNT_PASSWORD + " TEXT)"; 
		db.execSQL(CREATE_ACCOUNT_INFO_TABLE);
	}

	// Upgrade database
	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// drop older table if exists
		db.execSQL("DROP TABLE IF EXISTS " + TABLE_ACCOUNTS);
		
		// Create table again
		onCreate(db);
	}
	
	/**
	 * All CRUD Operations
	 */
	
	// Adding new account
	public void addAccount(Account account){
		SQLiteDatabase db = this.getReadableDatabase();
		
		ContentValues values = new ContentValues();
		values.put(ACCOUNT_NAME, account.getName()); // username
		values.put(ACCOUNT_PASSWORD, account.getPassword()); // password
		
		// insert a new row
		db.insert(TABLE_ACCOUNTS, null, values);
		db.close(); //close database connection
	}
	
	
	// Getting single Account
	public Account getAccount(String username){
		SQLiteDatabase db = this.getReadableDatabase();
		
		Cursor cursor = db.query(TABLE_ACCOUNTS, new String[] { ACCOUNT_ID, ACCOUNT_NAME, ACCOUNT_PASSWORD}, ACCOUNT_NAME + "=?", 
				new String []{ String.valueOf(username) }, null, null, null);
		if(cursor != null){
			cursor.moveToFirst();
		}
		
		Account account = new Account(Integer.parseInt(cursor.getString(0)), cursor.getString(1), cursor.getString(2));
		//return account
		return account;
	}
	
	// Get All Accounts
	public List<Account> getAllAccounts(){
		List<Account> accountList = new ArrayList<Account>();
		
		//Select all query
		String selectQuery = "SELECT * FROM " + TABLE_ACCOUNTS;
		
		SQLiteDatabase db = this.getReadableDatabase();
		Cursor cursor = db.rawQuery(selectQuery, null);
		
		if(cursor.moveToFirst()){
			do{
				Account account = new Account();
				account.setId(Integer.parseInt(cursor.getString(0));
				
			}
		}
	}
	
	// Get a count of all Accounts
	public int getAccountCount(){}
	
	// Update a single Account
	public int updateAccount(Account account){}
	
	//Delete single Account
	public void deleteAccount(Account account){}

}
